/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MemeToken, MemeTokenInterface } from "../../contracts/MemeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "excludeFromFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "includeInFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWalletAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTxAmount",
        type: "uint256",
      },
    ],
    name: "setMaxTxAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxWalletAmount",
        type: "uint256",
      },
    ],
    name: "setMaxWalletAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_taxFee",
        type: "uint256",
      },
    ],
    name: "setTaxFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600560065569d3c21bcecceda10000006007556a084595161401484a00000060085534801561003257600080fd5b5060405161110a38038061110a8339810160408190526100519161020c565b6040518060400160405280600981526020016826b2b6b2aa37b5b2b760b91b815250604051806040016040528060038152602001624d544b60e81b815250816003908161009e91906102c3565b5060046100ab82826102c3565b5050506100c46100bf6100ee60201b60201c565b6100f2565b6100ce3382610144565b50336000908152600960205260409020805460ff191660011790556103a8565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661019e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546101b09190610381565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b60006020828403121561021e57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061024f57607f821691505b60208210810361026f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561020757806000526020600020601f840160051c8101602085101561029c5750805b601f840160051c820191505b818110156102bc57600081556001016102a8565b5050505050565b81516001600160401b038111156102dc576102dc610225565b6102f0816102ea845461023b565b84610275565b6020601f821160018114610324576000831561030c5750848201515b600019600385901b1c1916600184901b1784556102bc565b600084815260208120601f198516915b828110156103545787850151825560209485019460019092019101610334565b50848210156103725786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156103a257634e487b7160e01b600052601160045260246000fd5b92915050565b610d53806103b76000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063aa4bde281161007c578063aa4bde2814610283578063c4081a4c1461028c578063dd62ed3e1461029f578063ea2f0b37146102b2578063ec28438a146102c5578063f2fde38b146102d857600080fd5b80638da5cb5b1461023157806395d89b411461024c578063a071dcf414610254578063a457c2d71461025d578063a9059cbb1461027057600080fd5b8063313ce5671161010a578063313ce567146101c257806339509351146101d1578063437823ec146101e457806370a08231146101f7578063715018a6146102205780638c0b5e221461022857600080fd5b806306fdde0314610147578063095ea7b31461016557806318160ddd1461018857806323b872dd1461019a57806327a14fc2146101ad575b600080fd5b61014f6102eb565b60405161015c9190610b2f565b60405180910390f35b610178610173366004610b99565b61037d565b604051901515815260200161015c565b6002545b60405190815260200161015c565b6101786101a8366004610bc3565b610397565b6101c06101bb366004610c00565b6103bb565b005b6040516012815260200161015c565b6101786101df366004610b99565b6103c8565b6101c06101f2366004610c19565b6103ea565b61018c610205366004610c19565b6001600160a01b031660009081526020819052604090205490565b6101c0610416565b61018c60075481565b6005546040516001600160a01b03909116815260200161015c565b61014f61042a565b61018c60065481565b61017861026b366004610b99565b610439565b61017861027e366004610b99565b6104b9565b61018c60085481565b6101c061029a366004610c00565b6104c7565b61018c6102ad366004610c3b565b6104d4565b6101c06102c0366004610c19565b6104ff565b6101c06102d3366004610c00565b610528565b6101c06102e6366004610c19565b610535565b6060600380546102fa90610c6e565b80601f016020809104026020016040519081016040528092919081815260200182805461032690610c6e565b80156103735780601f1061034857610100808354040283529160200191610373565b820191906000526020600020905b81548152906001019060200180831161035657829003601f168201915b5050505050905090565b60003361038b8185856105ae565b60019150505b92915050565b6000336103a58582856106d2565b6103b085858561074c565b506001949350505050565b6103c36108df565b600855565b60003361038b8185856103db83836104d4565b6103e59190610cbe565b6105ae565b6103f26108df565b6001600160a01b03166000908152600960205260409020805460ff19166001179055565b61041e6108df565b6104286000610939565b565b6060600480546102fa90610c6e565b6000338161044782866104d4565b9050838110156104ac5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103b082868684036105ae565b60003361038b81858561074c565b6104cf6108df565b600655565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105076108df565b6001600160a01b03166000908152600960205260409020805460ff19169055565b6105306108df565b600755565b61053d6108df565b6001600160a01b0381166105a25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a3565b6105ab81610939565b50565b6001600160a01b0383166106105760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a3565b6001600160a01b0382166106715760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106de84846104d4565b9050600019811461074657818110156107395760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104a3565b61074684848484036105ae565b50505050565b6007548111156107b35760405162461bcd60e51b815260206004820152602c60248201527f5472616e73616374696f6e20616d6f756e74206578636565647320746865206d60448201526b185e1a5b5d5b481b1a5b5a5d60a21b60648201526084016104a3565b600854816107d6846001600160a01b031660009081526020819052604090205490565b6107e09190610cbe565b11156108395760405162461bcd60e51b815260206004820152602260248201527f526563697069656e742077616c6c65742065786365656473206d6178206c696d6044820152611a5d60f21b60648201526084016104a3565b6001600160a01b03831660009081526009602052604081205460ff1615801561087b57506001600160a01b03831660009081526009602052604090205460ff16155b1561089d576064600654836108909190610cd1565b61089a9190610ce8565b90505b60006108a98284610d0a565b90506108b685858361098b565b81156108d8576108d8856108d26005546001600160a01b031690565b8461098b565b5050505050565b6005546001600160a01b031633146104285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166109ef5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a3565b6001600160a01b038216610a515760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a3565b6001600160a01b03831660009081526020819052604090205481811015610ac95760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a3565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610746565b602081526000825180602084015260005b81811015610b5d5760208186018101516040868401015201610b40565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610b9457600080fd5b919050565b60008060408385031215610bac57600080fd5b610bb583610b7d565b946020939093013593505050565b600080600060608486031215610bd857600080fd5b610be184610b7d565b9250610bef60208501610b7d565b929592945050506040919091013590565b600060208284031215610c1257600080fd5b5035919050565b600060208284031215610c2b57600080fd5b610c3482610b7d565b9392505050565b60008060408385031215610c4e57600080fd5b610c5783610b7d565b9150610c6560208401610b7d565b90509250929050565b600181811c90821680610c8257607f821691505b602082108103610ca257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561039157610391610ca8565b808202811582820484141761039157610391610ca8565b600082610d0557634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561039157610391610ca856fea264697066735822122059eb2e68026f6f0d3b89e869cadd0381bd1289bd3e3951cbb80cdc7eefbfa37864736f6c634300081c0033";

type MemeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MemeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MemeToken__factory extends ContractFactory {
  constructor(...args: MemeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override deploy(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialSupply, overrides || {}) as Promise<
      MemeToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MemeToken__factory {
    return super.connect(runner) as MemeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MemeTokenInterface {
    return new Interface(_abi) as MemeTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MemeToken {
    return new Contract(address, _abi, runner) as unknown as MemeToken;
  }
}
